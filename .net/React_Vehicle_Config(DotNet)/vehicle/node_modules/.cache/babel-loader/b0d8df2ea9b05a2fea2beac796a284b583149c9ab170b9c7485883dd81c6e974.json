{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bhush\\\\OneDrive\\\\Desktop\\\\doc\\\\vehicle_React_Tejas\\\\vehicle\\\\src\\\\Components\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { loginUser } from '../services/api'; // Importing the login helper API function\nimport { useNavigate } from 'react-router-dom'; // Importing useNavigate\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = ({\n  setEmail\n}) => {\n  _s();\n  const [email, setEmailInput] = useState(''); // User email state\n  const [password, setPassword] = useState(''); // User password state\n  const [error, setError] = useState(''); // Error state for invalid credentials\n  const [loading, setLoading] = useState(false); // Loading state for button\n  const navigate = useNavigate(); // Initialize useNavigate\n\n  const handleLogin = async e => {\n    e.preventDefault(); // Prevent form default behavior\n    setLoading(true);\n    setError(''); // Reset any existing error message\n\n    try {\n      // Call the loginUser function and handle success or error\n      const response = await loginUser(email, password);\n      if (response) {\n        // On success, store the CompanyInfo object and token in sessionStorage\n        sessionStorage.setItem('email', email); // Save email to sessionStorage\n        sessionStorage.setItem('companyInfo', JSON.stringify(response.companyInfo)); // Store company info\n        sessionStorage.setItem('token', response.token); // Store token\n\n        // Optionally, you can update the email in App state\n        setEmail(response.companyInfo.email); // Update App state with email\n\n        // Redirect to the welcome page using navigate (no page reload)\n        navigate('/welcome');\n      } else {\n        setError('Invalid credentials'); // Handle error if credentials are wrong\n      }\n    } catch (error) {\n      setError(error.message || 'Login failed. Please try again.'); // Set error message from loginUser\n    } finally {\n      setLoading(false); // Turn off the loading state\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 23\n    }, this), \"  \", /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email\",\n        value: email,\n        onChange: e => setEmailInput(e.target.value) // Update email state\n        ,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value) // Update password state\n        ,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        children: loading ? 'Logging in...' : 'Login'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"b2SODqtiUZmA/xldozbtfjcA4ms=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","loginUser","useNavigate","jsxDEV","_jsxDEV","Login","setEmail","_s","email","setEmailInput","password","setPassword","error","setError","loading","setLoading","navigate","handleLogin","e","preventDefault","response","sessionStorage","setItem","JSON","stringify","companyInfo","token","message","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","onSubmit","type","placeholder","value","onChange","target","required","disabled","_c","$RefreshReg$"],"sources":["C:/Users/bhush/OneDrive/Desktop/doc/vehicle_React_Tejas/vehicle/src/Components/Login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { loginUser } from '../services/api';  // Importing the login helper API function\r\nimport { useNavigate } from 'react-router-dom'; // Importing useNavigate\r\n\r\nconst Login = ({ setEmail }) => {\r\n    const [email, setEmailInput] = useState('');  // User email state\r\n    const [password, setPassword] = useState('');  // User password state\r\n    const [error, setError] = useState('');  // Error state for invalid credentials\r\n    const [loading, setLoading] = useState(false);  // Loading state for button\r\n    const navigate = useNavigate();  // Initialize useNavigate\r\n\r\n    const handleLogin = async (e) => {\r\n        e.preventDefault();  // Prevent form default behavior\r\n        setLoading(true);\r\n        setError('');  // Reset any existing error message\r\n\r\n        try {\r\n            // Call the loginUser function and handle success or error\r\n            const response = await loginUser(email, password);\r\n\r\n            if (response) {\r\n                // On success, store the CompanyInfo object and token in sessionStorage\r\n                sessionStorage.setItem('email', email);  // Save email to sessionStorage\r\n                sessionStorage.setItem('companyInfo', JSON.stringify(response.companyInfo));  // Store company info\r\n                sessionStorage.setItem('token', response.token);  // Store token\r\n\r\n                // Optionally, you can update the email in App state\r\n                setEmail(response.companyInfo.email);  // Update App state with email\r\n\r\n                // Redirect to the welcome page using navigate (no page reload)\r\n                navigate('/welcome');\r\n            } else {\r\n                setError('Invalid credentials');  // Handle error if credentials are wrong\r\n            }\r\n        } catch (error) {\r\n            setError(error.message || 'Login failed. Please try again.');  // Set error message from loginUser\r\n        } finally {\r\n            setLoading(false);  // Turn off the loading state\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Login</h2>\r\n            {error && <p style={{ color: 'red' }}>{error}</p>}  {/* Show error message */}\r\n            <form onSubmit={handleLogin}>\r\n                <input\r\n                    type=\"email\"\r\n                    placeholder=\"Email\"\r\n                    value={email}\r\n                    onChange={(e) => setEmailInput(e.target.value)}  // Update email state\r\n                    required\r\n                />\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}  // Update password state\r\n                    required\r\n                />\r\n                <button type=\"submit\" disabled={loading}>\r\n                    {loading ? 'Logging in...' : 'Login'}\r\n                </button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}