{"ast":null,"code":"const API_BASE_URL = \"http://localhost:8083\"; // Backend URL\n\nexport const loginUser = async (email, password) => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/api/auth/login`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    if (!response.ok) {\n      const errorText = await response.text();\n      throw new Error(`Login failed: ${errorText || response.statusText}`);\n    }\n    const data = await response.json();\n    if (data && data.token) {\n      return data;\n    } else {\n      throw new Error(\"Invalid credentials or empty response from server.\");\n    }\n  } catch (error) {\n    console.error(\"Error during login:\", error);\n    throw new Error(error.message || \"Login failed. Please try again.\");\n  }\n};","map":{"version":3,"names":["API_BASE_URL","loginUser","email","password","response","fetch","method","headers","body","JSON","stringify","ok","errorText","text","Error","statusText","data","json","token","error","console","message"],"sources":["C:/Users/bhush/OneDrive/Desktop/doc/vehicle_React_Tejas/vehicle/src/services/api.js"],"sourcesContent":["const API_BASE_URL = \"http://localhost:8083\";  // Backend URL\r\n\r\nexport const loginUser = async (email, password) => {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/api/auth/login`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ email, password }),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      const errorText = await response.text();\r\n      throw new Error(`Login failed: ${errorText || response.statusText}`);\r\n    }\r\n\r\n    const data = await response.json();\r\n\r\n    if (data && data.token) {\r\n      return data;\r\n    } else {\r\n      throw new Error(\"Invalid credentials or empty response from server.\");\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Error during login:\", error);\r\n    throw new Error(error.message || \"Login failed. Please try again.\");\r\n  }\r\n};\r\n"],"mappings":"AAAA,MAAMA,YAAY,GAAG,uBAAuB,CAAC,CAAE;;AAE/C,OAAO,MAAMC,SAAS,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;EAClD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGL,YAAY,iBAAiB,EAAE;MAC7DM,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAER,KAAK;QAAEC;MAAS,CAAC;IAC1C,CAAC,CAAC;IAEF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE;MAChB,MAAMC,SAAS,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;MACvC,MAAM,IAAIC,KAAK,CAAC,iBAAiBF,SAAS,IAAIR,QAAQ,CAACW,UAAU,EAAE,CAAC;IACtE;IAEA,MAAMC,IAAI,GAAG,MAAMZ,QAAQ,CAACa,IAAI,CAAC,CAAC;IAElC,IAAID,IAAI,IAAIA,IAAI,CAACE,KAAK,EAAE;MACtB,OAAOF,IAAI;IACb,CAAC,MAAM;MACL,MAAM,IAAIF,KAAK,CAAC,oDAAoD,CAAC;IACvE;EACF,CAAC,CAAC,OAAOK,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC3C,MAAM,IAAIL,KAAK,CAACK,KAAK,CAACE,OAAO,IAAI,iCAAiC,CAAC;EACrE;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}