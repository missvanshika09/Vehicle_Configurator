{"ast":null,"code":"const API_BASE_URL = \"http://localhost:8083\";\nexport const loginUser = async (email, password) => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/api/authlogin`, {\n      // ✅ Corrected endpoint\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    if (!response.ok) {\n      const errorText = await response.text();\n      throw new Error(`Login failed: ${errorText}`);\n    }\n    const data = await response.json();\n    if (data.token) {\n      sessionStorage.setItem(\"token\", data.token);\n      console.log(\"Token stored:\", sessionStorage.getItem(\"token\"));\n      return data;\n    } else {\n      throw new Error(\"Invalid credentials\");\n    }\n  } catch (error) {\n    console.error(\"Error logging in:\", error);\n    return null;\n  }\n};\nexport const fetchData = async () => {\n  try {\n    const token = sessionStorage.getItem(\"token\");\n    console.log(\"Retrieved token:\", token);\n    if (!token) {\n      throw new Error(\"No token found. Please login first.\");\n    }\n    const response = await fetch(`${API_BASE_URL}/data`, {\n      // ✅ Corrected endpoint\n      method: \"GET\",\n      headers: {\n        \"Authorization\": `Bearer ${token}`,\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (!response.ok) {\n      const errorText = await response.text();\n      throw new Error(`Data fetch failed: ${errorText}`);\n    }\n    return await response.json();\n  } catch (error) {\n    console.error(\"Error fetching data:\", error);\n    return null;\n  }\n};","map":{"version":3,"names":["API_BASE_URL","loginUser","email","password","response","fetch","method","headers","body","JSON","stringify","ok","errorText","text","Error","data","json","token","sessionStorage","setItem","console","log","getItem","error","fetchData"],"sources":["C:/Users/bhush/OneDrive/Desktop/doc/vehicle_React_Tejas/vehicle/src/services/api.js"],"sourcesContent":["const API_BASE_URL = \"http://localhost:8083\";\r\n\r\nexport const loginUser = async (email, password) => {\r\n    try {\r\n        const response = await fetch(`${API_BASE_URL}/api/authlogin`, {  // ✅ Corrected endpoint\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({ email, password })\r\n        });\r\n\r\n        if (!response.ok) {\r\n            const errorText = await response.text();\r\n            throw new Error(`Login failed: ${errorText}`);\r\n        }\r\n\r\n        const data = await response.json();\r\n\r\n        if (data.token) {\r\n            sessionStorage.setItem(\"token\", data.token);\r\n            console.log(\"Token stored:\", sessionStorage.getItem(\"token\"));  \r\n            return data;\r\n        } else {\r\n            throw new Error(\"Invalid credentials\");\r\n        }\r\n    } catch (error) {\r\n        console.error(\"Error logging in:\", error);\r\n        return null;\r\n    }\r\n};\r\n\r\nexport const fetchData = async () => {\r\n    try {\r\n        const token = sessionStorage.getItem(\"token\");  \r\n        console.log(\"Retrieved token:\", token);  \r\n\r\n        if (!token) {\r\n            throw new Error(\"No token found. Please login first.\");\r\n        }\r\n\r\n        const response = await fetch(`${API_BASE_URL}/data`, {  // ✅ Corrected endpoint\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Authorization\": `Bearer ${token}`,\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        });\r\n\r\n        if (!response.ok) {\r\n            const errorText = await response.text();\r\n            throw new Error(`Data fetch failed: ${errorText}`);\r\n        }\r\n\r\n        return await response.json();\r\n    } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n        return null;\r\n    }\r\n};"],"mappings":"AAAA,MAAMA,YAAY,GAAG,uBAAuB;AAE5C,OAAO,MAAMC,SAAS,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;EAChD,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGL,YAAY,gBAAgB,EAAE;MAAG;MAC7DM,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAER,KAAK;QAAEC;MAAS,CAAC;IAC5C,CAAC,CAAC;IAEF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE;MACd,MAAMC,SAAS,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;MACvC,MAAM,IAAIC,KAAK,CAAC,iBAAiBF,SAAS,EAAE,CAAC;IACjD;IAEA,MAAMG,IAAI,GAAG,MAAMX,QAAQ,CAACY,IAAI,CAAC,CAAC;IAElC,IAAID,IAAI,CAACE,KAAK,EAAE;MACZC,cAAc,CAACC,OAAO,CAAC,OAAO,EAAEJ,IAAI,CAACE,KAAK,CAAC;MAC3CG,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEH,cAAc,CAACI,OAAO,CAAC,OAAO,CAAC,CAAC;MAC7D,OAAOP,IAAI;IACf,CAAC,MAAM;MACH,MAAM,IAAID,KAAK,CAAC,qBAAqB,CAAC;IAC1C;EACJ,CAAC,CAAC,OAAOS,KAAK,EAAE;IACZH,OAAO,CAACG,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;IACzC,OAAO,IAAI;EACf;AACJ,CAAC;AAED,OAAO,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;EACjC,IAAI;IACA,MAAMP,KAAK,GAAGC,cAAc,CAACI,OAAO,CAAC,OAAO,CAAC;IAC7CF,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEJ,KAAK,CAAC;IAEtC,IAAI,CAACA,KAAK,EAAE;MACR,MAAM,IAAIH,KAAK,CAAC,qCAAqC,CAAC;IAC1D;IAEA,MAAMV,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGL,YAAY,OAAO,EAAE;MAAG;MACpDM,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACL,eAAe,EAAE,UAAUU,KAAK,EAAE;QAClC,cAAc,EAAE;MACpB;IACJ,CAAC,CAAC;IAEF,IAAI,CAACb,QAAQ,CAACO,EAAE,EAAE;MACd,MAAMC,SAAS,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;MACvC,MAAM,IAAIC,KAAK,CAAC,sBAAsBF,SAAS,EAAE,CAAC;IACtD;IAEA,OAAO,MAAMR,QAAQ,CAACY,IAAI,CAAC,CAAC;EAChC,CAAC,CAAC,OAAOO,KAAK,EAAE;IACZH,OAAO,CAACG,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC5C,OAAO,IAAI;EACf;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}